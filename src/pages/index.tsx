import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";

import { api } from "~/utils/api";

function SecretMessage() {
  const { data: secretMessage, status: secretMessageStatus } =
    api.message.getSecretMessage.useQuery();

  return (
    <p>
      {secretMessageStatus === "pending" && (
        <p className="animate-pulse">Loading secret message...</p>
      )}
      {secretMessageStatus === "success" && <p>ðŸ‘€ {secretMessage}</p>}
      {secretMessageStatus === "error" && (
        <p>ðŸ¤¢ Uh oh... an error occured loading the secret message...</p>
      )}
    </p>
  );
}

export default function Home() {
  const { data: helloResponse, status: helloStatus } =
    api.message.hello.useQuery({ text: ", world." });
  const { data: _user, status: userStatus } = useSession();

  return (
    <>
      <Head>
        <title>Template-NTTNP</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen items-center justify-center p-8">
        <div className="w-full max-w-2xl rounded-md border bg-white shadow-lg">
          <div className="p-4">
            {helloStatus === "pending" && (
              <h1 className="animate-pulse text-2xl font-medium">
                Loading greeting...
              </h1>
            )}
            {helloStatus === "success" && (
              <h1 className="text-2xl font-medium">
                ðŸ‘‹ {helloResponse.greeting}
              </h1>
            )}
            {helloStatus === "error" && (
              <h1 className="text-2xl font-medium">
                ðŸ¤¢ Uh oh... an error occured loading your greeting...
              </h1>
            )}
          </div>
          <div className="border-t p-4">
            {userStatus === "authenticated" ? (
              <SecretMessage />
            ) : (
              <button
                className="w-full rounded-md bg-blue-700 p-2 font-medium text-white duration-100 hover:bg-blue-800 hover:shadow-sm hover:shadow-blue-700/10 disabled:cursor-default disabled:opacity-50 disabled:shadow-none disabled:hover:bg-blue-700"
                onClick={() => signIn("google")}
                disabled={userStatus !== "unauthenticated"}
              >
                Sign in with Google
              </button>
            )}

            <div className="flex flex-row gap-2">
              {userStatus === "authenticated" && (
                <p
                  className="mt-2 inline-block cursor-pointer text-gray-600 underline duration-100 hover:text-black"
                  onClick={() => signOut()}
                >
                  [Sign Out]
                </p>
              )}
              <Link
                className="mt-2 inline-block cursor-pointer text-gray-600 underline duration-100 hover:text-black"
                href="https://github.com/sqwyer/template-nttnp"
                onClick={() => signOut()}
              >
                [Github Repo]
              </Link>
            </div>
          </div>
        </div>
      </main>
    </>
  );
}
